#!/usr/bin/env python3.9

import datetime
import time
import sys
import dpkt
import socket

def print_flow_summary_single(src_ip, src_port, dst_ip, dst_port, protocol, start_time, flow_packets, flow_bytes):
    print (f"Flow:  {flow}")
    print (f"Start time: {datetime.datetime.utcfromtimestamp(start_time)}")
    print (f"Total packets: {flow_packets}")
    print (f"Total bytes: {flow_bytes}")

def run_example():
    flow_db = {}
    try:
        pcap_file = sys.argv[1]
        pcap = dpkt.pcap.Reader(open(pcap_file, 'rb'))
    except:
        print("Error opening pcap file")
        sys.exit(1)
    
    for (ts,buf) in pcap:
        eth = dpkt.ethernet.Ethernet(buf)
        if eth.type != dpkt.ethernet.ETH_TYPE_IP:
            continue
        ip = eth.data
        #print (f"IP: {ip}")
        print (f"IP.p: {ip.p}")
        if ip.p != dpkt.ip.IP_PROTO_TCP:
            continue
        tcp = ip.data
        #print (f"TCP: {tcp}")
        src_ip = socket.inet_ntoa(ip.src) # convert IP from binary to dotted decimal format
        dst_ip = socket.inet_ntoa(ip.dst)
        src_port = str(tcp.sport)
        dst_port = str(tcp.dport)
        #protocol = "TCP"
        #flow = f"{src_ip}:{src_port} -> {dst_ip}:{dst_port}"
        if ip.p in (dpkt.ip.IP_PROTO_TCP, dpkt.ip.IP_PROTO_UDP):
            flow_id = src_ip + ':' + src_port + '-' + dst_ip + ':' + dst_port
            protocol = 'tcp' if ip.p == dpkt.ip.IP_PROTO_TCP else 'udp'
            if flow_id not in flow_db:



if __name__ == '__main__':
    run_example()
